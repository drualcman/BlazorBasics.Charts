// BarChartWithPercentage.razor
@using System.Linq

<div class="bar-chart-container">
    <div class="chart-title">MobileAP Subs vs. Monthly Active Users</div>
    
    <div class="chart-legend">
        <div class="legend-item">
            <span class="legend-color active-users"></span>
            <span>Active Users</span>
        </div>
        <div class="legend-item">
            <span class="legend-color non-active-users"></span>
            <span>Non-Active Users</span>
        </div>
        <div class="legend-item">
            <span class="legend-line"></span>
            <span>% Active</span>
        </div>
    </div>
    
    <div class="chart-area">
        <svg class="chart-svg" xmlns="http://www.w3.org/2000/svg">
            @{
                // Constantes para el layout
                const int margin = 40;
                const int chartHeight = 300;
                const int barWidth = 50;
                const int spacing = 30;
                
                // Calcular valores máximos
                var maxColumnTotal = Data.Any() ? Data.Max(x => x.ActiveUsers + x.NonActiveUsers) : 1;
                var points = new List<(double X, double Y)>();
                var totalWidth = (Data.Count * (barWidth + spacing)) + margin;
            }
            
            <!-- Eje X -->
            <line x1="@margin" y1="@(chartHeight + margin)" x2="@(totalWidth)" y2="@(chartHeight + margin)" stroke="#ccc" stroke-width="1" />
            
            @for (var i = 0; i < Data.Count; i++)
            {
                var item = Data[i];
                var columnTotal = item.ActiveUsers + item.NonActiveUsers;
                var activePercentage = columnTotal > 0 ? (item.ActiveUsers * 100.0 / columnTotal) : 0;
                
                // Altura de la columna (proporcional al máximo)
                var columnHeight = columnTotal * chartHeight / maxColumnTotal;
                
                // Posiciones
                var x = margin + (i * (barWidth + spacing));
                var yTop = margin + chartHeight - columnHeight;
                
                // Barra de usuarios activos
                <rect x="@x" y="@(yTop)" 
                      width="@barWidth" 
                      height="@(columnHeight * activePercentage / 100)" 
                      fill="#4e79a7" />
                
                // Barra de usuarios inactivos
                <rect x="@x" 
                      y="@(yTop + (columnHeight * activePercentage / 100))" 
                      width="@barWidth" 
                      height="@(columnHeight * (100 - activePercentage) / 100)" 
                      fill="#f28e2b" />
                
                // Punto de porcentaje activo (en el borde entre las dos barras)
                var pointX = x + (barWidth / 2);
                var pointY = yTop + (columnHeight * activePercentage / 100);
                points.Add((pointX, pointY));
                
                <circle cx="@pointX" cy="@pointY" r="5" fill="#e15759" />
                
                // Etiqueta del porcentaje activo
                @(new MarkupString(SvgHelper.CreateSvgText($"{(int)activePercentage}%", pointX, (int)(pointY - 10), "middle")))

                
                // Etiqueta del mes
                @(new MarkupString(SvgHelper.CreateSvgText(item.Month, (x + (barWidth / 2)), (int)(chartHeight + margin + 20), "middle")))
            }
            
            <!-- Línea que conecta los puntos del porcentaje activo -->
            @for (var i = 1; i < points.Count; i++)
            {
                <line x1="@points[i-1].X" y1="@points[i-1].Y" 
                      x2="@points[i].X" y2="@points[i].Y" 
                      stroke="#e15759" stroke-width="2" />
            }
        </svg>
    </div>
</div>
