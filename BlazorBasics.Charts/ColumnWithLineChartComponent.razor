<div class="bar-chart-container" style="
        --chart-height: @(ChartHeight)px;
        --chart-width: @(ChartWidth)px">
    <div class="chart-title">MobileAP Subs vs. Monthly Active Users</div>

    <div class="chart-legend">
        <div class="legend-item">
            <span class="legend-color primary-values"></span>
            <span>Primary Users</span>
        </div>
        <div class="legend-item">
            <span class="legend-color secondary-values"></span>
            <span>Secondary Users</span>
        </div>
        <div class="legend-item">
            <span class="legend-line grand-total"></span>
            <span>% of Grand Total</span>
        </div>
        <div class="legend-item">
            <span class="legend-line primary-percentage"></span>
            <span>% Primary Value</span>
        </div>
        <div class="legend-item">
            <span class="legend-line secondary-percentage"></span>
            <span>% Secondary Value</span>
        </div>
    </div>

    <div class="chart-area">
        <svg class="chart-svg" width="100%" height="100%" viewBox="0 0 @ChartWidth @ChartWidth">
            <!-- Eje X -->
            <line x1="@(margin - spacing)" y1="@(chartHeight + margin + 5)" x2="@(ChartWidth)" y2="@(chartHeight + margin + 5)" stroke="#ccc" stroke-width="1" />

            @for(var i = 0; i < Data.Count; i++)
            {
                <rect x="@ColumnsPrimary[i].X"
                      y="@ColumnsPrimary[i].Y"
                      width="@ColumnsPrimary[i].Width"
                      height="@ColumnsPrimary[i].Height"
                      fill="@ColumnsPrimary[i].Color" />

                // Barra de usuarios inactivos

                <rect x="@ColumnsSecondary[i].X"
                      y="@ColumnsSecondary[i].Y"
                      width="@ColumnsSecondary[i].Width"
                      height="@ColumnsSecondary[i].Height"
                      fill="@ColumnsSecondary[i].Color" />

                // Círculos para los puntos
                <circle cx="@PrimaryPoints[i].X" cy="@PrimaryPoints[i].Y" r="5" fill="@PrimaryPoints[i].Color" />
                <circle cx="@SecondaryPoints[i].X" cy="@SecondaryPoints[i].Y" r="5" fill="@SecondaryPoints[i].Color" />

                // Etiquetas usando el helper
                @(new MarkupString(SvgHelper.CreateSvgText(BigTotalPercentageLabels[i].Label, BigTotalPercentageLabels[i].X, BigTotalPercentageLabels[i].Y, "middle")))
                @(new MarkupString(SvgHelper.CreateSvgText(PrimaryPercentageLabels[i].Label, PrimaryPercentageLabels[i].X, PrimaryPercentageLabels[i].Y, "middle")))
                @(new MarkupString(SvgHelper.CreateSvgText(SecondaryPercentageLabels[i].Label, SecondaryPercentageLabels[i].X, SecondaryPercentageLabels[i].Y, "middle")))
                @(new MarkupString(SvgHelper.CreateSvgText(BottomLabels[i].Label, BottomLabels[i].X, BottomLabels[i].Y, "middle")))
            }

            <!-- Línea del porcentaje del total general -->
            <polyline points="@string.Join(" ", GrandTotalPoints.Select(p => $"{p.X},{p.Y}"))"
                      fill="none" stroke="#e15759" stroke-width="2" />

            <!-- Línea del porcentaje primario -->
            <polyline points="@string.Join(" ", PrimaryPercentagePoints.Select(p => $"{p.X},{p.Y}"))"
                      fill="none" stroke="#59a84b" stroke-width="2" />

            <!-- Línea del porcentaje secundario -->
            <polyline points="@string.Join(" ", SecondaryPercentagePoints.Select(p => $"{p.X},{p.Y}"))"
                      fill="none" stroke="#ed49ff" stroke-width="2" />
        </svg>

    </div>
</div>