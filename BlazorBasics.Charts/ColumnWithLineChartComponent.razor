<div class="column-chart @WrapperCss" style="@Style">
    <div class="column-chart @WrapperCss" style="@Style">
        @foreach(var topic in Topics)
        {
            <div class="columnchart-container" title="@topic.ShowTitle()">
                @if(Parameters.ShowValues)
                {
                    <div class="columnchart-labels columnchart-labels-top">
                        <span class="columnchart-quantity">@topic.PrimaryPercentage / @topic.SecondaryPercentage</span>
                    </div>
                }
                <div class="columnchart-background">
                    <!-- Primary value bar -->
                    <div class="columnchart-foreground primary-bar" style="background-color: @GetColour(topic, true); height: @GetPercentageHeight(topic, true).ToString(CultureInfo.InvariantCulture)%;"></div>
                    <!-- Secondary value bar stacked on top -->
                    <div class="columnchart-foreground secondary-bar" style="background-color: @GetColour(topic, false); height: @GetPercentageHeight(topic, false).ToString(CultureInfo.InvariantCulture)%; bottom: @GetPercentageHeight(topic, true).ToString(CultureInfo.InvariantCulture)%;"></div>
                    <!-- Percentage point -->
                    <div class="percentage-point" style="bottom: @GetPercentageHeight(topic.Value, TotalValue).ToString(CultureInfo.InvariantCulture)%;">
                        <span class="percentage-label">@topic.GetPercentage(TotalValue)%</span>
                    </div>
                </div>
                <div class="columnchart-labels columnchart-labels-bottom">
                    <span class="columnchart-name">@topic.Name</span>
                </div>
            </div>
        }
        <!-- Percentage line connecting the points -->
        <svg class="percentage-line" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;">
            @if(Topics.Count() > 1)
            {
                for(int i = 0; i < Topics.Count() - 1; i++)
                {
                    var topic1 = Topics.ElementAt(i);
                    var topic2 = Topics.ElementAt(i + 1);

                    // Calcular el ancho total de cada columna (incluyendo márgenes)
                    var columnWidth = Parameters.Thickness + 20; // 20px de margen (10px a cada lado)
                    var totalWidth = columnWidth * Topics.Count(); // Ancho total considerando todas las columnas
                    var x1 = ((i + 0.5) * columnWidth / totalWidth) * 100; // Centro de la columna i
                    var x2 = ((i + 1.5) * columnWidth / totalWidth) * 100; // Centro de la columna i+1

                    var y1 = 100 - GetPercentageHeight(topic1.Value, TotalValue);
                    var y2 = 100 - GetPercentageHeight(topic2.Value, TotalValue);

                    // Ajustar las coordenadas y para el espacio de las etiquetas superiores (30px)
                    var chartHeight = Parameters.Dimension - 30; // Altura del gráfico menos etiquetas superiores
                    var adjustedY1 = (y1 / 100) * chartHeight; // Escalar y1 al espacio disponible
                    var adjustedY2 = (y2 / 100) * chartHeight; // Escalar y2 al espacio disponible

                    <line x1="@x1%" y1="@adjustedY1" x2="@x2%" y2="@adjustedY2" stroke="blue" stroke-width="2" />
                }
            }
        </svg>
    </div>
</div>